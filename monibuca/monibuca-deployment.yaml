apiVersion: apps/v1
kind: Deployment
metadata:
  name: monibuca
  namespace: monibuca
  labels:
    app: monibuca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monibuca
  template:
    metadata:
      labels:
        app: monibuca
    spec:
      # initContainers:
      #   - name: init-0
      #     image: busybox
      #     imagePullPolicy: IfNotPresent
      #     terminationMessagePath: /dev/termination-log
      #     terminationMessagePolicy: File
      #     command: [ "sysctl", "-w", "net.core.somaxconn=511" ]
      #     securityContext:
      #       privileged: true
      #   - name: init-1
      #     image: busybox
      #     imagePullPolicy: IfNotPresent
      #     terminationMessagePath: /dev/termination-log
      #     terminationMessagePolicy: File
      #     command: [ "sh", "-c", "echo never > /sys/kernel/mm/transparent_hugepage/enabled" ]
      #     securityContext:
      #       privileged: true
      containers:
        - name: monibuca
          image: langhuihui/monibuca:latest
          imagePullPolicy: IfNotPresent
          # volumeMounts:
          #   - name: redis-persistent-storage
          #     mountPath: /var/lib/redis
          #   - name: redis-config
          #     mountPath: /usr/local/etc/redis/redis.conf
          #     subPath: redis.conf
          # command: [ "redis-server" ,"/usr/local/etc/redis/redis.conf" ]
          env:
            - name: TZ
              value: "Asia/Shanghai"
      # volumes:
      #   - name: timezone
      #     hostPath:
      #       path: /usr/share/zoneinfo/Asia/Shanghai
      #   - name: redis-persistent-storage
      #     persistentVolumeClaim:
      #       claimName: redis-pvc
      #   - name: redis-config
      #     configMap:
      #       name: redis-config